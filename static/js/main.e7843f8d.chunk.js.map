{"version":3,"sources":["components/Navbar.tsx","components/router/Page.tsx","components/router/PrivateRoute.js","components/ValueLabel.tsx","redux/actions/toastActions.tsx","redux/types.js","components/Task.tsx","redux/actions/taskActions.js","components/CreateTask.tsx","components/Team.tsx","redux/actions/teamActions.js","components/TeamList.tsx","components/MainBoard.tsx","components/Login.js","components/SignUp.js","components/Teammates.tsx","components/Page404.tsx","components/router/MainRouter.js","components/Snackbar.tsx","firebaseConfig.tsx","redux/reducers/userReducer.tsx","redux/reducers/taskReducer.tsx","redux/reducers/teamReducer.tsx","redux/reducers/toastReduser.tsx","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","compose","connect","store","auth","firebase","firestoreConnect","classes","history","useHistory","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","e","preventDefault","goBack","Typography","variant","Button","isEmpty","push","logout","Page","props","useEffect","document","rest","state","isLoggedIn","Component","component","render","to","pathname","from","location","ValueLabelComponent","children","open","value","popperRef","React","useRef","current","update","Tooltip","PopperProps","enterTouchDelay","placement","addToast","toast","dispatch","type","err","card","minWidth","maxWidth","margin","avatar","backgroundColor","red","progressRing","progressRingCircle","transition","transform","transformOrigin","formatDate","timeStamp","date","toDate","getDate","getMonth","getFullYear","data","firestore","userName","teams","task","userId","name","displayName","userPhoto","photoURL","deleteTask","taskId","getState","getFirestore","collection","doc","delete","then","message","severity","catch","setTotalTime","timeToAdd","totalTime","setTaskTotalTime","setTaskDone","done","_done","useState","offset","setOffset","minutes","setMinutes","seconds","setSeconds","timeInterval","setTimeInterval","duration","setDuration","anchorEl","setAnchorEl","Boolean","togleTimer","clearInterval","timer","Math","floor","round","interval","setInterval","i","radius","PI","clearTimer","startTimer","Card","key","CardHeader","Avatar","src","action","event","currentTarget","Menu","id","keepMounted","onClose","PaperProps","style","width","MenuItem","padding","gutterBottom","Slider","defaultValue","min","max","onChange","subheader","timestamp","CardActionArea","height","stroke","strokeWidth","fill","r","cx","cy","strokeDasharray","strokeDashoffset","x","y","textAnchor","fontFamily","fontSize","CardContent","taskName","description","CardActions","size","disabled","maxHeight","media","paddingTop","expand","marginLeft","transitions","create","shortest","expandOpen","textField","marginTop","marginBottom","createTask","console","log","uid","add","Date","createTaskAction","addToastAction","teamId","newTask","setNewTask","error","setError","handleOnChange","target","length","TextField","label","required","FormHelperText","multiline","rows","paragraph","align","deleteTeam","users","filter","deleteTeamAction","team","OnClickMyTeam","selected","ListItem","button","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","copy","createTeam","createTeamAction","addTeam","a","FieldValue","arrayUnion","addTeamAction","list","teamList","setTeam","setTeamId","selectedTeam","setSelectedTeam","handleClickMyTeam","map","display","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","divider","content","flexDirection","flexWrap","contentShift","ordered","tasks","concat","flatten","where","index","storeAs","dateFilter","setDateFilter","teamFilter","setTeamFilter","setOpen","selectedMenu","setSelectedMenu","openAnchor","useTheme","CssBaseline","clsx","noWrap","Drawer","anchor","paper","direction","Divider","now","taskDate","sort","b","getTime","body","palette","common","white","secondary","main","form","submit","withFirebase","email","setEmail","password","setPassword","handleOnClick","login","provider","handleChange","Container","noValidate","fullWidth","autoComplete","autoFocus","FormControlLabel","control","Checkbox","isLoaded","Grid","container","item","xs","Link","href","SetEmail","SetPassword","firstName","SetFirstName","lastName","SetLastName","errors","SetErrors","sm","createUser","username","justify","match","params","user","Box","Page404","role","path","exact","MainBoard","Login","SignUp","Teammates","Alert","elevation","zIndex","toasts","setToast","handleClose","reason","Snackbar","autoHideDuration","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initialState","initializeApp","middleWare","thunk","withExtraArgument","reducers","combineReducers","authentificated","createTaskError","deleteTaskError","setTaskError","deleteTeamErrors","createTeamErrors","addTeamErrors","addToastError","firebaseReducer","firestoreReducer","createStore","applyMiddleware","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","App","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7843f8d.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux';\n//MUI staff\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport { useHistory } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nfunction Navbar({ auth, firebase }: { auth: any, firebase: any }) {\n    const classes = useStyles({});\n    const history = useHistory();\n\n    const handleGoBack = (e: any) => {\n        e.preventDefault();\n        history.goBack();\n    }\n\n    const handleLogin = (e: any) => {\n        e.preventDefault();\n        if (!auth.isEmpty) {\n            firebase.logout(); \n            history.push('/');\n        } else history.push('/login');\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleGoBack}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        TEAMTOMATO\n                    </Typography>\n                    <Button color=\"inherit\" onClick={handleLogin}>{auth.isEmpty ? 'Login' : 'Logout'}</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default compose(connect((store: any) => {\n    return { auth: store.firebase.auth }\n}), firestoreConnect())(Navbar);\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { Route, RouteProps } from 'react-router-dom';\n\ninterface IPageProps extends RouteProps {\n    title: string;\n}\n\nconst Page: FunctionComponent<IPageProps> = props => {\n    useEffect(() => {\n        document.title = \"Website name | \" + props.title;\n    });\n\n    const { title, ...rest } = props;\n    return <Route { ...rest } />;\n};\n\nexport default Page;","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Page from './Page';\n\nfunction PrivateRoute({component: Component, isLoggedIn, ...rest}) {\n    return (\n        <Page \n            {...rest}\n            render={props => isLoggedIn? (\n                <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n                )}\n        />\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: !state.firebase.auth.isEmpty,\n    };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React from 'react'\nimport PopperJs from 'popper.js'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nexport default function ValueLabelComponent(props: any) {\n    const { children, open, value } = props;\n\n    const popperRef = React.useRef<PopperJs | null>(null);\n    React.useEffect(() => {\n        if (popperRef.current) {\n            popperRef.current.update();\n        }\n    });\n\n    return (\n        <Tooltip\n            PopperProps={{\n                popperRef,\n            }}\n            open={open}\n            enterTouchDelay={0}\n            placement=\"top\"\n            title={value}\n        >\n            {children}\n        </Tooltip>\n    );\n}","import {\n    ADD_TOAST,\n    ADD_TOAST_ERROR,\n} from '../types'\n\nimport { Toast } from '../../components/Snackbar'\n\n\nexport const addToast = (toast: Toast) => {\n    return (dispatch: any) => {\n        try {\n            dispatch({ type: ADD_TOAST, toast });\n        } catch (err) {\n            dispatch({ type: ADD_TOAST_ERROR }, err);\n        };\n    }\n}","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\n\nexport const CREATE_TASK = 'CREATE_TASK';\nexport const CREATE_TASK_ERROR = 'CREATE_TASK_ERROR';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const DELETE_TASK_ERROR = 'DELETE_TASK_ERROR';\nexport const SET_TASK_TIME = 'SET_TASK_TIME';\nexport const SET_TASK_TIME_ERROR = 'SET_TASK_TIME_ERROR';\nexport const SET_TASK_DONE = 'SET_TASK_DONE';\nexport const SET_TASK_DONE_ERROR = 'SET_TASK_DONE_ERROR';\n\nexport const CREATE_TEAM = 'CREATE_TEAM';\nexport const CREATE_TEAM_ERROR = 'CREATE_TEAM_ERROR';\nexport const DELETE_TEAM = 'DELETE_TEAM';\nexport const DELETE_TEAM_ERROR = 'DELETE_TEAM_ERROR';\nexport const ADD_TEAM = 'ADD_TEAM';\nexport const ADD_TEAM_ERROR = 'ADD_TEAM_ERROR';\n\nexport const ADD_TOAST = 'ADD_TOAST';\nexport const ADD_TOAST_ERROR = 'ADD_TOAST_ERROR';\n\n\nexport const SET_USER = 'SET_USER';\nexport const LOADING_USER = 'LOADING_USER';\n","import React, { useState } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport ValueLabelComponent from './ValueLabel'\n\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport Slider from '@material-ui/core/Slider'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { red } from '@material-ui/core/colors'\n\n\nimport { firestore } from 'firebase';\nimport { deleteTask, setTaskTotalTime, setTaskDone } from '../redux/actions/taskActions'\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        card: {\n            minWidth: 330,\n            maxWidth: 330,\n            margin: theme.spacing(3),\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        progressRing: {\n            margin: \"10px auto 10px 60px\",\n        },\n        progressRingCircle: {\n            transition: \"0.35s stroke-dashoffset\",\n            // axis compensation\n            transform: \"rotate(-90deg)\",\n            transformOrigin: \"50% 50%\",\n        }\n    })\n);\n\nconst formatDate = (timeStamp: firestore.Timestamp) => {\n    const date = timeStamp.toDate();\n    const days = (date.getDate() > 10) ? (date.getDate()) : (\"0\" + date.getDate());\n    const months = (date.getMonth() > 10) ? (date.getMonth()) : (\"0\" + date.getMonth());\n    return days + '.' + months + '.' + date.getFullYear();\n}\n\nexport function Task({\n    task,\n    userName,\n    userPhoto,\n    deleteTask,\n    setTotalTime,\n    setTaskDone,\n    taskId,\n}: {\n    task: TaskType,\n    userName: string,\n    userPhoto: string,\n    deleteTask: Function,\n    setTotalTime: Function,\n    setTaskDone: Function,\n    taskId: string,\n}) {\n    const [offset, setOffset] = useState(0);\n    const [minutes, setMinutes] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [timeInterval, setTimeInterval] = useState<any>();\n    const [duration, setDuration] = useState(20);\n    //MIU declarations\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const classes = useStyles({});\n    const open = Boolean(anchorEl);\n    const radius = 86;\n\n    function togleTimer() {\n        if (!timeInterval) startTimer()\n        else stopTimer();\n    }\n\n    function startTimer() {\n        if(task.done) return;\n        let timer = duration;\n        if (minutes !== 0 || seconds !== 0) timer = minutes * 60 + seconds;\n\n        setMinutes(Math.floor(timer / 60));\n        setSeconds(Math.round(timer % 60));\n\n        let interval = (setInterval(() => {\n            let i = (radius * 2 * Math.PI) - (timer / duration) * (radius * 2 * Math.PI);\n            setOffset(i);\n            setMinutes(Math.floor(timer / 60));\n            setSeconds(Math.round(timer % 60));\n\n            if (--timer === -1) {\n                clearTimer();\n                clearInterval(interval);\n                setTotalTime(taskId, task.totalTime + duration);\n            }\n        }, 1000));\n        setTimeInterval(interval);\n    }\n\n    function stopTimer() {\n        clearInterval(timeInterval);\n        setTimeInterval(null);\n    }\n\n    function clearTimer() {\n        clearInterval(timeInterval);\n        setTimeInterval(null);\n        setMinutes(0);\n        setSeconds(0);\n        setOffset(0);\n    }\n\n    function handleDelete() {\n        deleteTask(taskId);\n        setAnchorEl(null);\n    }\n\n    function handleOnChangeDuration(e: any, value: any) {\n        setDuration(value);\n    }\n\n    function handleSetTaskDone() {\n        setTaskDone(taskId, !task.done);\n        clearTimer();\n        setAnchorEl(null);\n    }\n\n    //MUI function\n    function handleMenuOnClose() {\n        setAnchorEl(null);\n    }\n\n    function handleMenuOnClick(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    return (\n        <Card className={classes.card} key={taskId}>\n            <CardHeader\n                avatar={\n                    <Avatar\n                        aria-label=\"user\"\n                        className={classes.avatar}\n                        src={userPhoto}\n                    >\n                        U\n                    </Avatar>\n                }\n                action={\n                    <div>\n                        <IconButton\n                            aria-label=\"settings\"\n                            onClick={handleMenuOnClick}\n                        >\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={open}\n                            onClose={handleMenuOnClose}\n                            PaperProps={{\n                                style: {\n                                    width: 300,\n                                },\n                            }}\n                        >\n                            <MenuItem onClick={handleSetTaskDone}>\n                                Mark as {(task.done) ? 'undone' : 'done'}\n                            </MenuItem>\n                            <MenuItem onClick={handleDelete}>\n                                Delete Task\n                            </MenuItem>\n                            <div style={{ padding: 16 }}>\n                                <Typography\n                                    gutterBottom\n                                >Set timer</Typography>\n                                <Slider\n                                    ValueLabelComponent={ValueLabelComponent}\n                                    aria-label=\"custom thumb label\"\n                                    defaultValue={20}\n                                    min={5}\n                                    max={30}\n                                    onChange={handleOnChangeDuration}\n                                />\n                            </div>\n                        </Menu>\n                    </div>\n                }\n                title={userName}\n                subheader={formatDate(task.timestamp)}\n            />\n            <CardActionArea onClick={togleTimer}>\n\n                <svg\n                    className={classes.progressRing}\n                    width=\"200\"\n                    height=\"200\">\n                    <g>\n                        <circle\n                            className={classes.progressRingCircle}\n                            stroke={(task.done) ? 'grey' : 'rgb(0,0,255)'}\n                            strokeWidth=\"4\"\n                            fill=\"transparent\"\n                            r={radius}\n                            cx=\"100\"\n                            cy=\"100\"\n                            strokeDasharray={(radius * 2 * Math.PI) + ' ' + (radius * 2 * Math.PI)}\n                            strokeDashoffset={offset} />\n                        <text\n                            x=\"100\"\n                            y=\"100\"\n                            textAnchor=\"middle\"\n                            fontFamily=\"Verdana\"\n                            fontSize=\"15\"\n                            fill=\"black\">\n                            {(minutes < 10) ? \"0\" + minutes : minutes}:{(seconds < 10) ? \"0\" + seconds : seconds}\n                        </text>\n                    </g>\n                </svg>\n            </CardActionArea>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" \n                    color={(task.done)? 'textSecondary' : 'textPrimary'}\n                >\n                    {task.taskName}\n                </Typography>\n                <Typography component=\"p\" \n                    color={(task.done)? 'textSecondary' : 'primary'}\n                >\n                    Total time: {task.totalTime}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {task.description} \n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\" \n                    onClick={togleTimer}\n                    disabled={task.done}\n                >\n                    { (!timeInterval)? 'Start' : 'Stop'}\n                </Button>\n                <Button size=\"small\" color=\"primary\" \n                    onClick={clearTimer}\n                    disabled={task.done}\n                >\n                    Clear\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default\n    connect(({ firestore: { data }, firebase: { auth } }: { firestore: any, firebase: any }, props: any) => ({\n        //task: data.tasks && data.tasks[props.taskId],\n        userName: (data.teams && data.teams[props.task.userId] && data.teams[props.task.userId].name ) || auth.displayName,\n        userPhoto: auth.photoURL,\n    }), (dispatch: any) => {\n        return {\n            deleteTask: (taskId: string) => dispatch(deleteTask(taskId)),\n            setTotalTime: (taskId: string, timeToAdd: number) => \n                dispatch(setTaskTotalTime(taskId, timeToAdd)),\n            setTaskDone: (taskId: string, done: boolean) => \n                dispatch(setTaskDone(taskId, done)),\n        }\n    })(Task);\n\nexport interface TaskType {\n    taskName: string,\n    description: string,\n    timestamp: firestore.Timestamp,\n    totalTime: number,\n    userId: string,\n    done: boolean,\n}","import {\n    CREATE_TASK,\n    CREATE_TASK_ERROR,\n    DELETE_TASK,\n    DELETE_TASK_ERROR,\n    SET_TASK_TIME,\n    SET_TASK_TIME_ERROR,\n    SET_TASK_DONE,\n    SET_TASK_DONE_ERROR,\n} from '../types'\nimport { addToast } from './toastActions'\n\nexport const createTask = (task) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        console.log('action');\n        console.log(task);\n        if(!task.userId) task.userId = getState().firebase.auth.uid;\n        firestore.collection('tasks').add({\n            ...task,\n            totalTime: 0,\n            timestamp: new Date(),\n            done: false,\n        }).then(() => {\n            dispatch({ type: CREATE_TASK, task });\n            dispatch(addToast({message: `Task ${task.taskName} created`, severity: 'success'}));\n        }).catch((err) => {\n            dispatch({ type: CREATE_TASK_ERROR }, err);\n            dispatch(addToast({message: `Can't create task`, severity: 'error'}));\n        });\n    }\n}\n\nexport const deleteTask = (taskId) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        firestore.collection('tasks').doc(taskId).delete()\n            .then(() => {\n                dispatch({ type: DELETE_TASK, taskId });\n                dispatch(addToast({message: `Task deleted`, severity: 'success'}));\n            }).catch(err => {\n                dispatch({ type: DELETE_TASK_ERROR, err });\n                dispatch(addToast({message: `Can't delete task`, severity: 'error'}));\n            });\n    }\n}\n\nexport const setTaskTotalTime = (taskId, timeToAdd) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        firestore.update({ collection: 'tasks', doc: taskId }, { totalTime: timeToAdd })\n            .then(() => {\n                dispatch({ type: SET_TASK_TIME, taskId });\n            }).catch(err => {\n                dispatch({ type: SET_TASK_TIME_ERROR, err });\n            });\n    }\n}\n\nexport const setTaskDone = (taskId, _done) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        firestore.update({ collection: 'tasks', doc: taskId }, { done: _done })\n            .then(() => {\n                dispatch({ type: SET_TASK_DONE, taskId });\n            }).catch(err => {\n                dispatch({ type: SET_TASK_DONE_ERROR, err})\n            })\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport { red } from '@material-ui/core/colors';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { createTask as createTaskAction } from '../redux/actions/taskActions';\nimport { addToast as addToastAction } from '../redux/actions/toastActions'\nimport { Toast } from './Snackbar'\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            width: 330,\n            maxHeight: 280,\n            margin: theme.spacing(3),\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        textField: {\n            marginTop: 18,\n            marginBottom: 5,\n        }\n    }),\n);\n\nexport function CreateTask({\n    createTask,\n    toast, \n    teamId \n}: { \n    createTask: Function,\n    toast: Function,\n    teamId: string \n}) {\n    const [newTask, setNewTask] = useState({ taskName: '', description: '', userId: teamId });\n    const [error, setError] = useState({ taskName: '', description: '', userId: '' });\n\n    useEffect(() => {\n        setNewTask({ ...newTask, userId: teamId })\n    }, [teamId]);\n\n    const classes = useStyles({});\n\n    function handleCreateTask(e: any) {\n        e.preventDefault();\n        if (error.taskName || error.description) return;\n        if (!newTask.taskName || !newTask.description) {\n            setError({\n                ...error,\n                taskName: (!newTask.taskName) ? 'Enter name! ' : '',\n                description: (!newTask.description) ? 'Enter description! ' : '',\n            });\n            toast({message: 'Can\\'t create task.', severity: 'error'})\n            return;\n        }\n        createTask(newTask);\n        setNewTask({ ...newTask,  taskName: '', description: '' });\n    }\n\n    function handleOnChange(e: any) {\n        e.preventDefault();\n        switch (e.target.name) {\n            case 'taskName':\n                setNewTask({ ...newTask, taskName: e.target.value });\n                if (e.target.value === '')\n                    setError({ ...error, taskName: 'Enter name! ' });\n                else if (e.target.value.length > 20)\n                    setError({ ...error, taskName: 'Name should be less than 20 symbols! ' });\n                else\n                    setError({ ...error, taskName: '' });\n                break;\n            case 'description':\n                setNewTask({ ...newTask, description: e.target.value });\n                if (e.target.value === '')\n                    setError({ ...error, description: 'Enter description! ' });\n                else if (e.target.value.length > 50)\n                    setError({ ...error, description: 'Name should be less than 50 symbols! ' });\n                else\n                    setError({ ...error, description: '' });\n                break;\n            default:\n                return;\n        }\n    }\n\n    function cancel() {\n        setNewTask({ ...newTask, taskName: '', description: '' });\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <TextField\n                    id=\"taskName\"\n                    name=\"taskName\"\n                    label=\"Task Name\"\n                    required={true}\n                    error={Boolean(error.taskName)}\n                    value={newTask.taskName}\n                    onChange={handleOnChange}\n                ></TextField>\n                {error.taskName && (\n                    <FormHelperText id=\"component-error-text\">\n                        {error.taskName}\n                    </FormHelperText>\n                )}\n                <TextField\n                    className={classes.textField}\n                    id=\"description\"\n                    name=\"description\"\n                    label=\"Description\"\n                    required={true}\n                    multiline\n                    rows={2}\n                    error={Boolean(error.description)}\n                    value={newTask.description}\n                    onChange={handleOnChange}\n                ></TextField>\n                {error.description && (\n                    <FormHelperText id=\"component-error-text\">\n                        {error.description}\n                    </FormHelperText>\n                )}\n                <Typography\n                    component='h4'\n                    paragraph={true}\n                    align='center'\n                    color='primary'\n                >\n                    { teamId && 'Task will be created in selected group' }\n                </Typography>\n\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\" onClick={handleCreateTask}>\n                    Create\n                </Button>\n                <Button size=\"small\" color=\"secondary\" onClick={cancel}>\n                    Cancel\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nfunction mapActionsToProps(dispatch: any) {\n    return {\n        createTask: (task: any) => dispatch(createTaskAction(task)),\n        toast: (toast: Toast) => dispatch(addToastAction(toast)),\n    }\n}\n\nexport default connect(null, mapActionsToProps)(CreateTask)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport copy from 'copy-to-clipboard'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GroupIcon from '@material-ui/icons/Group'\nimport GroupAddIcon from '@material-ui/icons/GroupAdd'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport ListIcon from '@material-ui/icons/List'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { deleteTeam as deleteTeamAction } from '../redux/actions/teamActions'\nimport { addToast as addToastAction } from '../redux/actions/toastActions'\nimport { Toast } from './Snackbar'\nimport { useHistory } from \"react-router-dom\"\n\nexport function Team({\n    team,\n    OnClickMyTeam,\n    deleteTeam,\n    selected,\n    toast,\n}: {\n    team: any,\n    OnClickMyTeam: Function,\n    deleteTeam: Function,\n    selected: boolean,\n    toast: Function,\n}) {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const history = useHistory();\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleInvite = () => {\n        copy(team.id);\n        toast({message: `ID of ${team.name} is copied to buffer.`, severity: 'info'})\n        setAnchorEl(null);\n    }\n\n    const handleTeammates = () => {\n        setAnchorEl(null);\n        history.push(`teammates/${team.id}`);\n    }\n\n    const handleDelete = () => {\n        deleteTeam(team.id);\n        setAnchorEl(null);\n    };\n\n    if (!team) return <ListItem><Typography>team is loading...</Typography></ListItem>;\n\n    return (\n        <ListItem\n            id={team.id}\n            button\n            onClick={() => OnClickMyTeam(team.id)}\n            key={team.id}\n            selected={selected}\n        >\n            <ListItemIcon>\n                <GroupIcon />\n            </ListItemIcon>\n            <ListItemText primary={team.name} />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"comments\" onClick={handleClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={handleInvite}>\n                        <ListItemIcon>\n                            <GroupAddIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        Invite to team\n                    </MenuItem>\n                    <MenuItem onClick={handleTeammates}>\n                        <ListItemIcon>\n                            <ListIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        Show teammates\n                    </MenuItem>\n                    <MenuItem onClick={handleDelete}>\n                        <ListItemIcon>\n                            <DeleteIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        Delete me from team\n                    </MenuItem>\n                </Menu>\n            </ListItemSecondaryAction>\n        </ListItem>\n    )\n}\n\nexport default\n    connect(null, (dispatch: any) => {\n        return {\n            deleteTeam: (teamId: string) => dispatch(deleteTeamAction(teamId)),\n            toast: (toast: Toast) => dispatch(addToastAction(toast)),\n        }\n    })(Team);\n","import {\n    DELETE_TEAM,\n    DELETE_TEAM_ERROR,\n    CREATE_TEAM,\n    CREATE_TEAM_ERROR,\n    ADD_TEAM,\n    ADD_TEAM_ERROR,\n} from '../types'\nimport { addToast } from './toastActions'\nimport * as firebase from 'firebase'\n\nexport const deleteTeam = (teamId) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        firestore.update({ collection: 'teams', doc: teamId }, {\n            users: getState().firestore.data.teams[teamId].users.filter(userId => userId !== getState().firebase.auth.uid),\n        })\n            .then(() => {\n                dispatch({ type: DELETE_TEAM, teamId });\n                dispatch(addToast({message: `You're deleted from team`, severity: 'success'}));\n            }).catch(err => {\n                dispatch({ type: DELETE_TEAM_ERROR, err });\n                dispatch(addToast({message: `Can't delete you from team`, severity: 'error'}));\n            });\n    }\n}\n\nexport const createTeam = (team) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        firestore.collection('teams').add({\n            ...team,\n            users: [getState().firebase.auth.uid],\n        }).then(() => {\n            dispatch({ type: CREATE_TEAM, team });\n            dispatch(addToast({message: `Team ${team.name} is created`, severity: 'success'}));\n        }).catch((err) => {\n            dispatch({ type: CREATE_TEAM_ERROR }, err);\n            dispatch(addToast({message: `Can't create team ${team.name}`, severity: 'error'}));\n        });\n    }\n}\n\nexport const addTeam = (teamId) => {\n    return async (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        const updatedUsers = [];\n        updatedUsers.push(getState().firebase.auth.uid);\n        firestore.update({\n            collection: 'teams',\n            doc: teamId\n        }, {\n            users: firebase.firestore.FieldValue.arrayUnion(getState().firebase.auth.uid)\n        })\n        .then(() => {         \n            dispatch({ type: ADD_TEAM, teamId });\n            dispatch(addToast({message: `You're added to team`, severity: 'success'}));\n        })\n        .catch(err => {\n            dispatch({ type: ADD_TEAM_ERROR, err });\n            dispatch(addToast({message: `Can't add you to team`, severity: 'error'}));\n        });\n    }\n}","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport ListItem from '@material-ui/core/ListItem'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Team from './Team'\nimport { createTeam as createTeamAction } from '../redux/actions/teamActions'\nimport { addTeam as addTeamAction } from '../redux/actions/teamActions'\n\nexport function TeamList(\n    {\n        OnClickMyTeam,\n        teamList,\n        createTeam,\n        addTeam,\n    }: {\n        OnClickMyTeam: any,\n        teamList: any,\n        createTeam: Function,\n        addTeam: Function,\n    }) {\n    const [team, setTeam] = useState({ name: '' });\n    const [teamId, setTeamId] = useState('');\n    const [selectedTeam, setSelectedTeam] = useState('');\n\n    const handleClickMyTeam = (teamId: string) => {\n        (teamId === selectedTeam) ? setSelectedTeam('') : setSelectedTeam(teamId)\n        OnClickMyTeam(teamId);\n    }\n    let list;\n    if (teamList) {\n        list = teamList.map((team: any) => {\n            return (\n                <Team team={team} OnClickMyTeam={handleClickMyTeam} selected={selectedTeam === team.id} key={team.id} />\n            )\n        });\n    }\n    const handleCreateTeam = (e: any) => {\n        e.preventDefault();\n        createTeam(team);\n        setTeam({ name: '' });\n    }\n    const handleChange = (e: any) => {\n        e.preventDefault();\n        setTeam({ ...team, name: e.target.value });\n    }\n    const handleChangeAdd = (e: any) => {\n        e.preventDefault();\n        setTeamId(e.target.value);\n    }\n    const handleAddTeam = (e: any) => {\n        e.preventDefault();\n        addTeam(teamId);\n        setTeamId('');\n    }\n\n    return (\n        <>\n            {\n                (!teamList) ? (\n                    <ListItem>\n                        <Typography>team list loading</Typography>\n                    </ListItem>\n                ) : list\n            }\n            <ListItem>\n                <TextField\n                    id=\"createteam\"\n                    name=\"createteam\"\n                    label=\"Team name\"\n                    required={true}\n                    multiline\n                    rows={1}\n                    value={team.name}\n                    onChange={handleChange}\n                ></TextField>\n                <Button size=\"small\" color=\"primary\" onClick={handleCreateTeam}>\n                    Create\n                </Button>\n            </ListItem>\n            <ListItem>\n                <TextField\n                    id=\"addteam\"\n                    name=\"addteam\"\n                    label=\"Team Id\"\n                    required={true}\n                    value={teamId}\n                    onChange={handleChangeAdd}\n                ></TextField>\n                <Button size=\"small\" color=\"primary\" onClick={handleAddTeam}>\n                    Add\n                </Button>\n            </ListItem>\n        </>\n    )\n}\n\nconst mapActionsToProps = (dispatch: any) => {\n    return {\n        createTeam: (team: any) => dispatch(createTeamAction(team)),\n        addTeam: (teamId: String) => dispatch(addTeamAction(teamId)),\n    }\n}\n\nexport default connect(null, mapActionsToProps)(TeamList);","//React\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport Task, { TaskType } from './Task'\nimport CreateTask from './CreateTask';\nimport TeamList from './TeamList';\n//Firebase\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux';\nimport { flatten } from 'lodash'\n//MUI\nimport clsx from 'clsx'\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport UserIcon from '@material-ui/icons/AccountCircle'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n        },\n        divider: {\n            marginBottom: 5,\n        },\n        content: {\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            padding: theme.spacing(3),\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            marginLeft: -drawerWidth,\n        },\n        contentShift: {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        },\n        card: {\n            maxWidth: 345,\n            margin: theme.spacing(3),\n        },\n    }),\n);\n\nfunction MainBoard({ firebase, tasks, teams, userName }: { firebase: any, tasks: any, teams: any, userName: string }) {\n    const [dateFilter, setDateFilter] = useState<any>(null);\n    const [teamFilter, setTeamFilter] = useState<string>('');\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [open, setOpen] = useState(true);\n    const [selectedMenu, setSelectedMenu] = useState('');\n\n    const openAnchor = Boolean(anchorEl);\n    const classes = useStyles({});\n    const theme = useTheme();\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    function handleOnMenuClose() {\n        setAnchorEl(null);\n    }\n\n    function handleOnCLickDateFilter() {\n        if (selectedMenu === 'Today') {\n            setDateFilter(null);\n            setSelectedMenu('');\n        } else {\n            setDateFilter(new Date());\n            setSelectedMenu('Today');\n        }\n    }\n\n    function handleOnCLickDateFilterYesterday() {\n        if (selectedMenu === 'Yesterday') {\n            setDateFilter(null);\n            setSelectedMenu('');\n        } else {\n            setDateFilter(new Date(Date.now() - 86400000));\n            setSelectedMenu('Yesterday');\n        }\n    }\n\n    function handleOnCLickNoDateFilter() {\n        setDateFilter(null);\n        setSelectedMenu('');\n    }\n\n    function handleOnCLickMyTeam(teamId: string) {\n        (teamFilter !== teamId) ? setTeamFilter(teamId) : setTeamFilter('');\n    }\n\n    function handleMenuOnClick(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleLogOut() {\n        setAnchorEl(null);\n        firebase.logout();\n    }\n\n    function filterTasks(task: TaskType) {\n        if (teamFilter) {\n            if (task.userId !== teamFilter) return false;\n        }\n        if (!dateFilter) return true;\n        const taskDate = task.timestamp.toDate();\n        if (taskDate.getFullYear() === dateFilter.getFullYear() &&\n            taskDate.getMonth() === dateFilter.getMonth() &&\n            taskDate.getDate() === dateFilter.getDate()\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        TEAM TOMATO\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <Typography\n                        component='h4'\n                        paragraph={true}\n                        align='center'\n                        color='primary'\n                    >\n                        YOUR PROFILE\n                    </Typography>\n                    <ListItem button onClick={handleMenuOnClick}>\n                        <ListItemIcon><UserIcon /></ListItemIcon>\n                        <ListItemText primary={userName} />\n                    </ListItem>\n                    <Menu\n                        id=\"long-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={openAnchor}\n                        onClose={handleOnMenuClose}\n                        PaperProps={{\n                            style: {\n                                width: 200,\n                            },\n                        }}\n                    >\n                        <MenuItem onClick={handleLogOut}>\n                            Log Out\n                        </MenuItem>\n                    </Menu>\n                    <MenuItem\n                        button\n                        onClick={handleOnCLickDateFilter}\n                        key={\"Today\"}\n                        selected={selectedMenu === 'Today'}\n                    >\n                        <ListItemIcon><InboxIcon /></ListItemIcon>\n                        <ListItemText primary={\"Today\"} />\n                    </MenuItem>\n                    <MenuItem\n                        button\n                        onClick={handleOnCLickDateFilterYesterday}\n                        key={\"Yesterday\"}\n                        selected={selectedMenu === 'Yesterday'}\n                    >\n                        <ListItemIcon><InboxIcon /></ListItemIcon>\n                        <ListItemText primary={\"Yesterday\"} />\n                    </MenuItem>\n                    <MenuItem id=\"Any time\" button onClick={handleOnCLickNoDateFilter} key={\"Any time\"}>\n                        <ListItemIcon><InboxIcon /></ListItemIcon>\n                        <ListItemText primary={\"Any time\"} />\n                    </MenuItem>\n                    <Divider className={classes.divider} />\n                    <Typography\n                        component='h4'\n                        paragraph={true}\n                        align='center'\n                        color='primary'\n                    >\n                        TEAMS\n                        </Typography>\n                    <TeamList OnClickMyTeam={handleOnCLickMyTeam} teamList={teams} />\n                </List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <CreateTask teamId={teamFilter} />\n                <div className={classes.drawerHeader} />\n                {\n                    (tasks) ? tasks.filter(filterTasks).sort((a: TaskType, b: TaskType) => {\n                        return b.timestamp.toDate().getTime() - a.timestamp.toDate().getTime();\n                    }).map((task: any, index: number) => (\n                        <Task taskId={task.id} key={task.id} task={task} />\n                    )) : (\n                            <Typography paragraph>Loading...</Typography>\n                        )\n                }\n            </main>\n        </div>\n    );\n}\n\nexport default compose(\n    connect((store: any) => {\n        if (!store.firestore.ordered.tasks) return {\n            userId: store.firebase.auth.uid,\n        };\n        return {\n            // if we have teams we merge user's task array with all teams' task arrays. Else we just return user's tasks array\n            tasks: store.firestore.ordered.teams ?\n                store.firestore.ordered.tasks.concat(\n                    flatten(\n                        store.firestore.ordered.teams.map((x: any) => {\n                            return store.firestore.ordered[`tasks${x.id}`] ? store.firestore.ordered[`tasks${x.id}`] : [];\n                        })))\n                : store.firestore.ordered.tasks,\n            teams: store.firestore.ordered.teams,\n            userName: store.firebase.auth.displayName,\n            userId: store.firebase.auth.uid,\n        }\n    }),\n    firestoreConnect(({ userId }: any) => {\n        if (!userId) return [];\n        return [{\n            collection: 'teams',\n            where: ['users', 'array-contains', userId]\n        }]\n    }),\n    firestoreConnect(({ userId }: any) => {\n        if (!userId) return [];\n        return [{\n            collection: 'tasks',\n            where: ['userId', '==', userId]\n        }]\n    }),\n    firestoreConnect(({ teams }: any) => {\n        if (!teams) return [];\n        let ids = teams.map((team: any) => team.id);\n        let res = ids.map((id: any, index: number) => ({\n            collection: 'tasks',\n            where: ['userId', '==', id],\n            storeAs: `tasks${id}`,\n        }));\n        return res;\n    }),\n)(MainBoard)","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n//  Firebase\nimport { withFirebase, isLoaded, isEmpty } from 'react-redux-firebase'\n//  MIU\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n//  MIU styles\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n// Login Component\nfunction Login({ firebase, auth, history }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    if(auth.uid) history.push('/');\n    function loginWithGoogle() {\n        firebase.login({ provider: 'google', type: 'popup' }).then(() => {\n            history.push('/');\n        });\n    }\n\n    function handleOnClick(e) {\n        e.preventDefault();\n        if(!isEmpty(auth)) { firebase.logout(); return; }\n        if (email && password) {\n            firebase.login({\n                email,\n                password\n            }).then(() => {\n                console.log('go main');\n                history.push('/login');\n            })\n            return;\n        }\n        isEmpty(auth) ? loginWithGoogle() : firebase.logout()\n    }\n    function handleChange(e) {\n        switch (e.target.name) {\n            case 'email':\n                setEmail(e.target.value);\n                break;\n            case 'password':\n                setPassword(e.target.value);\n                break;\n            default: return;\n        }\n    }\n\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n                    </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={handleChange}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={!isLoaded(auth)}\n                        onClick={handleOnClick}\n                    >\n                        {isEmpty(auth) ? 'Sign In' : 'Log out'}\n                    </Button>\n                    <Button\n                        type=\"button\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.submit}\n                        disabled={!isLoaded(auth)}\n                        onClick={handleOnClick}\n                    >\n                        LogIn with Google\n                        </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                                </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nLogin.propTypes = {\n    firebase: PropTypes.shape({\n        login: PropTypes.func.isRequired\n    }),\n    auth: PropTypes.object\n}\n\nexport default compose(\n    withFirebase,\n    connect(({ firebase: { auth } }) => ({ auth }))\n)(Login)\n","import React, { useState } from 'react';\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n//  Firebase\nimport { withFirebase } from 'react-redux-firebase'\n//  MUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport function SignUp({firebase, auth}) {\n    \n    const [email, SetEmail] = useState('');\n    const [password, SetPassword] = useState('');\n    const [firstName, SetFirstName] = useState('');\n    const [lastName, SetLastName] = useState('');\n    const [errors, SetErrors] = useState(''); \n\n    function handleOnChange(e) {\n        switch(e.target.name){\n            case 'email' : \n                SetEmail(e.target.value);\n                break;\n            case 'password' :\n                SetPassword(e.target.value);\n                break;\n            case 'firstName' :\n                SetFirstName(e.target.value);\n                break;\n            case 'lastName' :\n                SetLastName(e.target.value);\n                break;\n            default :\n                return;\n        }\n    }\n\n    function loginWithGoogle(e) {\n        e.preventDefault();\n        return firebase.login({ provider: 'google', type: 'popup' });\n    }\n\n    function createUserwithCredentials(e) {\n        e.preventDefault();\n        console.log('fetchdata');\n        firebase.createUser({\n            email: email,\n            password: password\n        }, {\n            username: firstName + ' ' + lastName,\n            email: email\n        })\n        .then(data => console.log(data))\n        .catch(err => {\n            SetErrors(err);\n        });\n    }\n\n    \n        const classes = useStyles();\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"firstName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    value={firstName}\n                                    onChange={handleOnChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                    value={lastName}\n                                    onChange={handleOnChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    value={email}\n                                    onChange={handleOnChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={password}\n                                    onChange={handleOnChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Typography component=\"h5\" variant=\"h6\" color=\"secondary\">\n                        {errors&&errors.message}\n                        </Typography>\n                        \n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={createUserwithCredentials}\n                        >\n                            Sign Up\n                        </Button>\n                        <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.submit}\n                            onClick={loginWithGoogle}\n                        >\n                            SignUp with Google\n                    </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/login\" variant=\"body2\">\n                                    Already have an account? Log in\n                            </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n        );\n}\n\nexport default compose(\n    withFirebase,\n    connect(({ firebase: { auth } }) => ({ auth }))\n)(SignUp)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { flatten } from 'lodash'\n\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport { red } from '@material-ui/core/colors'\nimport { Avatar, Card, CardHeader } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        minWidth: 250,\n        maxWidth: 330,\n        margin: theme.spacing(3),\n        padding: 10\n    },\n    avatar: {\n        backgroundColor: red[500],\n        marginBottom: 5\n    },\n    container: {\n        padding: 10,\n    },\n    button: {\n        marginTop: 10,\n    }\n}))\n\nexport const Teammates = ({ teams, users, history }: {teams: any, users: any, history: any}) => {\n    const classes = useStyles({});\n\n    const handleOnClick = () => {\n        history.push('/');\n    }\n\n    let list = users && users.map((user:any) => {\n        return <Card className={classes.card} key={user.id}>\n            <CardHeader \n                avatar={\n                    <Avatar className={classes.avatar}>{user.name[0]}</Avatar>\n                }\n                title={<Typography variant=\"h5\" component=\"h2\">{user.name}</Typography>}\n                subheader={<Typography>{user.email}</Typography>}\n            ></CardHeader>\n            \n        </Card>\n    });\n\n    return (\n        <Box\n            className={classes.container}\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n        >\n            <Typography variant=\"h4\" noWrap align='center'>\n                {teams? teams[0].name: 'LOADING'}\n            </Typography>\n\n            <Box display=\"flex\" flexDirection=\"row\">\n                {list}\n            </Box>\n\n            <Button\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={handleOnClick}\n            >\n                Go Back to main page\n            </Button>\n        </Box>\n    )\n}\n\nexport default compose(\n    connect((store: any) => {\n        return {\n            teams: store.firestore.ordered.teams,\n            users: store.firestore.ordered.teams &&\n                        flatten(\n                            store.firestore.ordered.teams[0].users.map((x: any) => {\n                                return store.firestore.ordered[`users${x}`] ? \n                                    store.firestore.ordered[`users${x}`] : [];\n                            })\n                        )\n        }\n    }),\n    firestoreConnect((props: any) => {\n        if (!props) return [];\n        return [{\n            collection: 'teams',\n            doc: props.match.params.id,\n        }]\n    }),\n    firestoreConnect(({ teams }: any) => {\n        if (!teams) return [];\n        let ids = teams[0].users;\n        let res = ids.map((id: any, index: number) => ({\n            collection: 'users',\n            doc: id,\n            storeAs: `users${id}`,\n        }));\n        return res;\n    }),\n)(Teammates); ","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: 10,\n    },\n    button: {\n        marginTop: 10,\n    }\n}))\n\nexport const Page404 = ({ history }: { history: any }) => {\n    const classes = useStyles();\n\n    const handleOnClick = () => {\n        history.push('/');\n    }\n    return (\n        <Box\n            className={classes.container}\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n        >\n            <Typography variant=\"h4\" noWrap align='center'>\n                PAGE NOT FOUND! SORRY <span role=\"img\" aria-label=\"sad\">😢</span>\n            </Typography>\n            <Button\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={handleOnClick}\n            >\n                Go Back to main page\n            </Button>\n        </Box>\n    )\n}\n\nexport default Page404;","import React from 'react'\nimport { Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PrivateRoute from './PrivateRoute'\nimport Page from './Page'\nimport MainBoard from '../MainBoard'\nimport Login from '../Login'\nimport SignUp from '../SignUp'\nimport Teammates from '../Teammates'\nimport Page404 from '../Page404'\n\nfunction MainRouter(props) {\n    if (!props.auth.isLoaded) return (<div>loading...</div>)\n    return (\n        <Switch>\n            <PrivateRoute path=\"/\" exact component={MainBoard} title='Main' />\n            <Page path=\"/login\" component={Login} title='Login' />\n            <Page path=\"/signup\" component={SignUp} title='Sign up' />\n            <Page path=\"/teammates/:id\" component={Teammates} title='Teammates' />\n            <Page component={Page404} title='Not found' />\n        </Switch>\n    )\n}\n\nexport default connect((store) => {\n    return { auth: store.firebase.auth }\n})(MainRouter)\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert, { AlertProps, Color } from '@material-ui/lab/Alert'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\n\nexport function Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n        zIndex: 1000\n    },\n}));\n\nexport function CustomSnackbar({ toasts }: { toasts: Toast[] }) {\n    const classes = useStyles({});\n    const [open, setOpen] = React.useState(false);\n    const [toast, setToast] = React.useState<Toast>({ message: '', severity: 'success'});\n\n    React.useEffect(() => {\n        if(toasts && toasts.length > 0) {\n            setToast(toasts[toasts.length - 1]);\n            setOpen(true);\n        }\n    }, [toasts])\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={toast.severity}>\n                    {toast && toast.message}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n}\n\nexport default connect((store: any) => {\n    return {\n        toasts: store.toasts.toasts,\n    }\n})(CustomSnackbar)\n\nexport interface Toast {\n    message: String,\n    severity: Color,\n}","const firebaseConfig = {\n    apiKey: \"AIzaSyDB464_icNem-DnDnJNDYxpce6oxaXsK9E\",\n    authDomain: \"teamtomato-c00e4.firebaseapp.com\",\n    databaseURL: \"https://teamtomato-c00e4.firebaseio.com\",\n    projectId: \"teamtomato-c00e4\",\n    storageBucket: \"teamtomato-c00e4.appspot.com\",\n    messagingSenderId: \"910619689905\",\n    appId: \"1:910619689905:web:3878cb98b3974232\"\n};\n\nexport default firebaseConfig;","import {\n    SET_AUTHENTICATED,\n} from '../types'\n\nconst initialState = {}\n\nexport default function userReducer (state = initialState, action : any) {\n    switch(action.type) {\n        case SET_AUTHENTICATED :\n            return {\n                ...state,\n                authentificated: true\n            };\n        default :\n            return { ...state }\n    }\n}","import {\n    CREATE_TASK,\n    CREATE_TASK_ERROR,\n    DELETE_TASK,\n    DELETE_TASK_ERROR,\n    SET_TASK_TIME,\n    SET_TASK_TIME_ERROR,\n    SET_TASK_DONE,\n    SET_TASK_DONE_ERROR,\n} from '../types'\n\nconst initialState = {}\n\nexport default function taskReducer(state = initialState, action: any) {\n    switch (action.type) {\n        case CREATE_TASK:\n            return {\n                ...state,\n                createTaskError: null,\n            };\n        case CREATE_TASK_ERROR:\n            return {\n                ...state,\n                createTaskError: action.err,\n            };\n        case DELETE_TASK:\n            return {\n                ...state,\n                deleteTaskError: null,\n            };\n        case DELETE_TASK_ERROR:\n            return {\n                ...state,\n                deleteTaskError: action.err,\n            };\n        case SET_TASK_TIME:\n            return {\n                ...state,\n                setTaskError: null,\n            };\n        case SET_TASK_TIME_ERROR:\n            return {\n                ...state,\n                setTaskError: action.err,\n            };\n        case SET_TASK_DONE:\n            return {\n                ...state,\n                setTaskError: null,\n            };\n        case SET_TASK_DONE_ERROR:\n            return {\n                ...state,\n                setTaskError: action.err,\n            };\n        default:\n            return { ...state }\n    }\n}","import {\n    DELETE_TEAM, \n    DELETE_TEAM_ERROR,\n    CREATE_TEAM,\n    CREATE_TEAM_ERROR,\n    ADD_TEAM,\n    ADD_TEAM_ERROR,\n} from '../types'\n\nconst initialState = {};\n\nexport default function teamReducer(state=initialState, action: any) {\n    switch(action.type) {\n        case DELETE_TEAM : \n            return {\n                ...state,\n                deleteTeamErrors: null,\n            };\n        case DELETE_TEAM_ERROR : \n            return {\n                ...state,\n                deleteTeamErrors: action.err,\n            };\n        case CREATE_TEAM : \n            return {\n                ...state,\n                createTeamErrors: null,\n            };\n        case CREATE_TEAM_ERROR : \n            return {\n                ...state,\n                createTeamErrors: action.err,\n            };\n        case ADD_TEAM : \n            return {\n                ...state,\n                addTeamErrors: null,\n            }\n        case ADD_TEAM_ERROR : \n            return {\n                ...state,\n                addTeamErrors: action.err,\n            }\n        default :\n            return {\n                ...state\n            };\n    }\n}","import {\n    ADD_TOAST,\n    ADD_TOAST_ERROR,\n} from '../types'\n\nconst initialState = {\n    toasts: []\n}\n\nexport default function toastReducer(state = initialState, action: any) {\n    switch (action.type) {\n        case ADD_TOAST:\n            return {\n                ...state,\n                toasts: [...state.toasts, action.toast],\n                addToastError: null,\n            };\n        case ADD_TOAST_ERROR:\n            return {\n                ...state,\n                addToastError: action.err,\n            };\n        default:\n            return { ...state }\n    }\n}","// Redux\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n// FireBase\nimport firebase from 'firebase'\nimport firebaseConfig from '../firebaseConfig'\nimport 'firebase/firestore'\n\n// Reducers\nimport userReducer from './reducers/userReducer'\nimport taskReducer from './reducers/taskReducer'\nimport teamReducer from './reducers/teamReducer'\nimport toastReducer from './reducers/toastReduser'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer, getFirestore, reduxFirestore } from 'redux-firestore'\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nconst initialState = {\n};\n\nconst middleWare = [thunk.withExtraArgument(getFirestore)];\n\nconst reducers = combineReducers({\n    user: userReducer,\n    task: taskReducer,\n    team: teamReducer,\n    toasts: toastReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nconst store = createStore(\n    reducers, \n    initialState,\n    compose( \n        applyMiddleware(...middleWare), \n        reduxFirestore(firebase),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ));\n\nexport default store;","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\n// Components\nimport Navbar from './components/Navbar'\nimport MainRouter from './components/router/MainRouter'\nimport Snackbar from './components/Snackbar'\n// Redux\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n// FireBase\nimport * as firebase from 'firebase'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\n// Styles\nimport './App.css';\n\nconst rrfProps = {\n  firebase,\n  config: {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n  },\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n          <Navbar />\n          <MainRouter />\n          <Snackbar />\n        </ReactReduxFirebaseProvider>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}